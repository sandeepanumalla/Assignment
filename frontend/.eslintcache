[{"C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\index.js":"1","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\Routes.js":"2","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\user\\Signin.js":"3","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\user\\Signup.js":"4","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\auth\\helper\\index.js":"5","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\backend.js":"6","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\core\\Base.js":"7","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\core\\menu.js":"8","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\core\\data.js":"9","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\core\\Home.js":"10","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\user\\UserDashBoard.js":"11"},{"size":444,"mtime":1606921477867,"results":"12","hashOfConfig":"13"},{"size":506,"mtime":1607088432287,"results":"14","hashOfConfig":"13"},{"size":5127,"mtime":1607091099735,"results":"15","hashOfConfig":"13"},{"size":3818,"mtime":1607091092193,"results":"16","hashOfConfig":"13"},{"size":1735,"mtime":1607091001055,"results":"17","hashOfConfig":"13"},{"size":50,"mtime":1604007896039,"results":"18","hashOfConfig":"13"},{"size":552,"mtime":1606976317575,"results":"19","hashOfConfig":"13"},{"size":1554,"mtime":1607088680839,"results":"20","hashOfConfig":"13"},{"size":817,"mtime":1606940012196,"results":"21","hashOfConfig":"13"},{"size":12612,"mtime":1607090538870,"results":"22","hashOfConfig":"13"},{"size":0,"mtime":1607088754822,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1i4mm8p",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\index.js",["54"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport { Route } from 'react-router';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <Routes></Routes>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["55","56"],"C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\Routes.js",[],"C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\user\\Signin.js",["57","58","59","60","61"],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport '../../node_modules/semantic-ui-css/semantic.min.css'\nimport {  authenticate, isAuthenticated } from \"../auth/helper/index\";\nimport UserDashboard from \"./UserDashBoard\";\n\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n    error: \"\",\n   \n    loading: false,\n    success: false,\n    didRedirect: false\n  });\n\n  const { username, password, error, loading, didRedirect,success } = values;\n  const { user } = isAuthenticated();\n\n\n  /* const onItem = e => {\n    setValues({...values, error: false, role: e})\n   console.log(\"clicked me!\", e)\n  } */\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\nvar redirectRole =\"Teacher\"\n  const performRedirect = () => {\n\n    //TODO do a redirection\n    if(didRedirect){\n    \n         return <Redirect to=\"/\" />\n      \n    }\n    if(isAuthenticated()){\n      return <Redirect to=\"/\" /> \n    }\n  }\n  const signin = user => {\n    return fetch(`http://localhost:8000/api/users/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user) \n    }).then(data =>{\n      if(data.ok===false){\n        setValues({...values,error1:\"Invalid details\"})\n        console.log(\"invalid details\")\n      }\n      console.log(\"data\",data)\n      return data.json()\n    })\n    .catch(err =>{ return err} )\n  }\n  \n  const onSubmit = event => {\n    event.preventDefault();\n\n    \n    if( username === \"\" || password === \"\"  ){\n      console.log(\"is it rinng\")\n      setValues({...values, error:\" Please enter all the credentials to login\"})\n    }\n    \n    /* if(role === \"\"){\n      console.log(\"running\");\n      setValues({...values, error:\"please select user role\"})\n    } */\n    \n    else{\n      signin({ username, password })\n      .then((data,err) => {\n       \n     /*  console.log(\"onsubmit\",data);\n      console.log(\"onsubmit2\",isAuthenticated()); */\n      \n      if (data === \"user not found\" || data === \"incorrect password\"){\n       /*  console.log(\"da\") */\n        return setValues({...values, error:\" Wrong username or password \"})\n      }\n      /* else if(data === \"Invalid role selected\"){\n        console.log(\"da2\");\n        return setValues({...values, error:\" Invalid role selected\"})\n      } */\n      \n      \n      /* if(isAuthenticated() === false){\n        console.log(\"da2\")\n        return setValues({...values, error:\"ivalued details\"})\n      } */\n\n       else{ setValues({ ...values, error: \"\", loading: true });\n        setValues({ ...values, error: false, loading: true });\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true,\n              success: true\n            });\n          });}\n        \n      })\n      .catch(err=>{console.log(\"signin request failed\",err)});\n    }\n\n    \n  };\n  const LoadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  \n \n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          \n          </div>\n          <form>\n          \n            <div className=\"form-group\">\n              <label className=\"text-dark\">Username</label>\n              <input\n                onChange={handleChange(\"username\")}\n                value={username}\n                className=\"form-control\"\n                type=\"text\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-dark\">Password</label>\n              <input\n                onChange={handleChange(\"password\")}\n                value={password}\n                className=\"form-control\"\n                type=\"password\"\n              />\n            </div>\n          \n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In page\" description=\"\">\n      {LoadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n   \n     \n      <div className=\"signin bg-light text-white p-4\"></div>\n      <div className=\"signin bg-light text-white p-4\"></div>\n      <div className=\"signin bg-light text-white p-4\"></div>\n      <div className=\"signin bg-light text-white p-4\"></div>\n      <div className=\"signin bg-light text-white p-4\"></div>\n    </Base>\n  );\n};\n\nexport default Signin;\n","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\user\\Signup.js",["62"],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"../auth/helper\";\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    username: \"\",\n   \n    password: \"\",\n    error: \"\",\n  \n    success: false\n  });\n\n  const { username, fullname, password, error, success } = values;\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n   /*  setValues({ ...values, error: false }); */\n    if(username === \"\" || fullname === \"\" || password ===\"\" ){\n    setValues({ ...values, error:\"please fill all the details\" })\n    }\n    \n    else{\n    signup({ username, fullname, password })\n      .then(data => {\n         \n          setValues({\n            ...values,\n            username: \"\",\n            password: \"\",\n            error: \"\",\n            success: true,\n            \n          });\n        \n      })\n      .catch(console.log(\"Error in signup\"));\n    }\n  };\n\n   const onItemClick = event => {\n     setValues({...values, error: false, role: event})\n    console.log(\"clicked me!\", event)\n   }\n  const signUpForm = () => {\n    return (\n      <div className=\"row\">\n      \n\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n        \n        </div>\n       \n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-dark\">Username</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"username\")}\n                type=\"text\"\n                value={username}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-dark\">Fullname</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"fullname\")}\n                type=\"text\"\n                value={fullname}\n              />\n            </div>\n\n            \n            <div className=\"form-group\">\n            <label className=\"text-dark\">Password</label>\n            <input\n              onChange={handleChange(\"password\")}\n              className=\"form-control\"\n              type=\"password\"\n              value={password}\n            />\n          </div>\n          \n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  const successMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-success\"\n            style={{ display: success ? \"\" : \"none\" }}\n          >\n            New account was created successfully. Please{\" \"}\n            <Link to=\"/signin\">Login Here</Link>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign up page\" description=\"\">\n      {successMessage()}\n      {errorMessage()}\n      {signUpForm()}\n     \n      <div className=\"signin bg-light text-white p-4\"></div>\n      <div className=\"signin bg-light text-white p-4\"></div>\n      <div className=\"signin bg-light text-white p-4\"></div>\n      <div className=\"signin bg-light text-white p-4\"></div>\n      <div className=\"signin bg-light text-white p-4\"></div>\n    </Base>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\auth\\helper\\index.js",["63","64"],"import { API } from \"../../backend\";\nimport axios from 'axios';\n\n\n\nexport const signup = user => {\n  return fetch(`http://localhost:8000/api/users/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\n\nexport const authenticate = (data, next) => {\n \n  localStorage.setItem(\"jwt\", JSON.stringify(data));\n  console.log(\"maind data\",data)\n  next();\n\n};\n\n\nexport const signout = next => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    next();\n\n    return fetch(`http://localhost:8000/api/users/signout`, {\n      method: \"GET\"\n    })\n      .then(response => console.log(\"signout success\"))\n      .catch(err => console.log(err));\n  }\n};\n\nexport const isAuthenticated = () => {\n  /* if (typeof window == \"undefined\") {\n    return false;\n  } */\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\n\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:8000/api/users',\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${isAuthenticated().token}`\n  }\n})\n\nexport const courses = async () => {\n  \n  return await fetch(`http://localhost:8000/api/users/all-posts`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify()\n  })\n    .then(response => {\n      return response.json();\n      console.log(response.json())\n    })\n    .catch(err => console.log(err));\n \n};\n\n\n","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\backend.js",[],"C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\core\\Base.js",["65"],"import React from \"react\";\nimport { API } from \"../backend\";\nimport Menu from \"./menu\";\n\nconst Base = ({\n  title = \"My Title\",\n  description = \"My desription\",\n  className = \"bg-light text-white p-4\",\n  children\n}) => (\n  <div>\n  <Menu />\n    <div className=\"container-fluid bg-light\">\n      <div className=\"jumbotron bg-light text-dark text-center\">\n        <h4 className=\"display-4\">{title}</h4>\n        <p className=\"lead\">{description}</p>\n      </div>\n      <div className={className}>{children}</div>\n    </div>\n  </div>\n);\n\nexport default Base;\n","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\core\\menu.js",["66"],"import userEvent from \"@testing-library/user-event\";\nimport React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { signout, isAuthenticated } from \"../auth/helper\";\n\nconst currentTab = (history, path) => {\n  if (history.location.pathname === path) {\n    return { color: \"#2ecc72\" };\n  } else {\n    return { color: \"#FFFFFF\" };\n  }\n};\n\nconst Menu = ({ history }) => (\n  <div>\n    <ul className=\"nav nav-tabs bg-dark\">\n    <li className=\"nav-item\">\n    <Link\n      style={currentTab(history, \"/\")}\n      className=\"nav-link\"\n      to=\"/\"\n    >\n      Home\n    </Link>\n  </li>\n    \n      \n     \n     \n      \n      {!isAuthenticated() && (\n        <Fragment>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/signup\")}\n          className=\"nav-link\"\n          to=\"/signup\"\n        >\n          Signup\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/signin\")}\n          className=\"nav-link\"\n          to=\"/signin\"\n        >\n          Sign In\n        </Link>\n      </li>\n      \n      </Fragment>\n      )}\n      \n      {isAuthenticated() && (\n        <li className=\"nav-item\" style={{cursor:\"pointer\"}}>\n          <span\n            className=\"nav-link text-warning\"\n            onClick={() => {\n              signout(() => {\n                history.push(\"/\");\n              });\n            }}\n          >\n            Signout\n          </span>\n        </li>\n      )}\n    </ul>\n  </div>\n);\n\nexport default withRouter(Menu);\n","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\core\\data.js",[],"C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\core\\Home.js",["67","68","69","70","71","72","73"],"\r\n\r\nimport React, { Component, Fragment } from 'react'\r\nimport \"../styles.css\";\r\nimport { API } from \"../backend\";\r\nimport Base from \"./Base\";\r\nimport { data } from \"./data\";\r\nimport { api, courses, isAuthenticated } from \"../auth/helper\";\r\nimport '../../node_modules/semantic-ui-css/semantic.min.css';\r\nimport Axios from 'axios';\r\n\r\n\r\nexport default class Home extends Component {\r\n    state ={\r\n        comment:[],\r\n        newPost:[],\r\n        child:[],\r\n        check:false,\r\n        post:\"\",\r\n        addcomments:\"\",\r\n        showComments:\"\",\r\n        comment_id:\"\",\r\n        post_id:\"\",\r\n        AddComment: \"\",\r\n        AddCommentId:\"\",\r\n        allComments:[],\r\n        deletePostId:\"\",\r\n        postIdForComment:\"\",\r\n        replyCommentId:\"\",\r\n        replypostId:\"\",\r\n        addReply:\"\",\r\n        postDeleteId:\"\"\r\n\r\n    }\r\n\r\n      \r\n    \r\n    componentWillMount(){\r\n        courses().then(e =>{ console.log(e)\r\n            this.setState({comment:e})\r\n            this.setState({child:e.comments})\r\n          })\r\n          .catch(err => console.log(err))\r\n          console.log(\"isAuthenticated\",isAuthenticated())\r\n    }\r\n    onClickPost= ()=>{\r\n        console.log(\"clicked\")\r\n        if(isAuthenticated()){\r\n            console.log(\"running\")\r\n            this.setState({check:true})\r\n            console.log(\"click state\", this.state.check)\r\n        }\r\n        else{\r\n        window.alert(\"please login to add posts\")\r\n        }\r\n    }\r\n    handleChange=name=>event=>{\r\n        this.setState({error:false,[name]:event.target.value})\r\n    }\r\n    submitPost = item =>{\r\n      \r\n        return  fetch(`http://localhost:8000/api/users/new-post/${isAuthenticated().user._id}`,\r\n        {method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${isAuthenticated().token}`\r\n        },\r\n    \r\n        body: JSON.stringify(item)})\r\n        .then(response => {\r\n            return response.json()\r\n          \r\n        })\r\n        .catch(err => console.log(err));\r\n        \r\n      }\r\n     /*  addReply = item =>{\r\n      \r\n        return  fetch(`http://localhost:8000/api/users/new-reply/${isAuthenticated().user._id}`,\r\n        {method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${isAuthenticated().token}`\r\n        },\r\n    \r\n        body: JSON.stringify(item)})\r\n        .then(response => {\r\n            return response.json()\r\n          \r\n        })\r\n        .catch(err => console.log(err));\r\n        \r\n      } */\r\n    onSubmitPost=()=>{\r\n        const text = this.state.post;\r\n        return this.submitPost({text})\r\n        .then(success =>{\r\n            console.log(\"success\",success)\r\n            let {comment} = this.state\r\n            comment.push(success)\r\n            this.setState({comment})\r\n            window.alert(\"successfully added new post! check below\")\r\n        })\r\n        .catch((err)=>{console.log(err)})\r\n\r\n    }\r\n    onClickReply =(id)=>{\r\n        console.log(\"onreply clicked\",id)\r\n    }\r\n    onclickComment =(id) =>{\r\n        console.log(\"clicked id\",id)\r\n        if(isAuthenticated()){\r\n          this.setState({AddComment:\"true\"})\r\n          this.setState({AddCommentId:id})\r\n          console.log(\"authenticated\")\r\n        }\r\n        else window.alert(\"login to add comment\")\r\n        \r\n    }\r\n    clicckk =(id)=>{\r\n        console.log(\"clicked id\",id)\r\n        this.setState({deletePostId:id})\r\n    }\r\n    \r\n    submitDelete =(item) =>{\r\n      console.log(\"itme\",item)\r\n      this.setState({postDeleteId:item})\r\n      \r\n      return fetch(`http://localhost:8000/api/users/delete-post/${isAuthenticated().user._id}/${item}`,\r\n      {method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${isAuthenticated().token}`\r\n      },\r\n  \r\n      body: JSON.stringify()})\r\n      .then(response => {\r\n        if(response.ok){\r\n          let {comment} = this.state\r\n          const filter  =comment.filter(e => e._id !== item)\r\n          this.setState({comment:filter})\r\n        }\r\n          return response.json()\r\n      })\r\n\r\n      .catch(err => console.log(\"err\",err))\r\n     /* return this.SubmitDeleteRequest()\r\n     .then(data => console.log(\"success\",data))\r\n     .catch(err => console.log(err)) */\r\n     /*  api.delete(`/delete-post/${isAuthenticated().user._id}/${item}`)\r\n      .then(data=>{\r\n        console.log(data)\r\n        let {comment} = this.state\r\n        const filter  =comment.filter(e => e._id !== data.data._id)\r\n\r\n        this.setState({comment:filter})\r\n      \r\n\r\n\r\n      })\r\n      .catch(err => console.log(err)) */\r\n    }\r\n   \r\n\r\n    \r\n    onClickReply =(id,id2)=>{\r\n      if(isAuthenticated()){\r\n        this.setState({replyCommentId:id})\r\n        this.setState({replypostId:id2})\r\n        console.log(\"onreply clicked id1\",this.state.replyCommentId)\r\n        console.log(\"id2\",this.state.replypostId)\r\n      }\r\n      else{\r\n\r\n        window.alert(\"you need to login to reply\")\r\n      }\r\n    }\r\n    \r\n   \r\n    submitComment = item =>{\r\n      console.log(\"postId\",this.state.AddCommentId)\r\n      return  fetch(`http://localhost:8000/api/users/new-comment/${isAuthenticated().user._id}/${this.state.AddCommentId}`,\r\n      {method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${isAuthenticated().token}`\r\n      },\r\n  \r\n      body: JSON.stringify(item)})\r\n      .then(response => {\r\n          return response.json()\r\n        \r\n      })\r\n      .catch(err => console.log(err));\r\n      \r\n    }\r\n\r\n    onSubmitComment = ()=>{\r\n      const content = this.state.addcomments;\r\n        return this.submitComment({content})\r\n        .then(success =>{\r\n            console.log(\"success\",success)\r\n           /*  let {comment} = this.state\r\n            comment.push(success)\r\n            this.setState({comment}) */\r\n           /*  window.alert(\"comment successfully added please reload\") */\r\n           window.location.reload();\r\n        })\r\n        .catch((err)=>{console.log(err)})\r\n    }\r\n    ReplyRequest = (item)=>{\r\n      return fetch(`http://localhost:8000/api/users/new-reply/${isAuthenticated().user._id}/${this.state.replypostId}/${this.state.replyCommentId}`,\r\n      {method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${isAuthenticated().token}`\r\n      },\r\n  \r\n      body: JSON.stringify(item)})\r\n      .then(response => {\r\n          return response.json()\r\n        \r\n      })\r\n      .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n\r\n    onSubmitReply=()=>{\r\n      const content = this.state.addReply;\r\n     return this.ReplyRequest({content})\r\n     .then(data =>{\r\n       console.log(data)\r\n       window.location.reload()\r\n     })\r\n     .catch(err => console.log(\"err\"))\r\n    }\r\n  \r\n    render() {\r\n     \r\n        /* console.log(\"user\",this.state.comment) */\r\n        const c =this.state.comment.map(e =>e.comments)\r\n       /* console.log(\"check\",this.state.check) */\r\n        /* this.setState({child:c})\r\n        console.log(\"user\",this.state.child) */\r\n        function Comment({ comment }) {\r\n            const nestedComments = (comment.comments || []).map(comment => {\r\n              return <Comment key={comment._id} comment={comment} type=\"child\" />\r\n            })\r\n          \r\n            return (\r\n              <div>\r\n              <div style={{\"marginLeft\": \"25px\", \"marginTop\": \"10px\" , \"border\":\"1px solid black\", \"paddingBottom\":\"10px\",\r\n               \"paddingRight\":\"10px\",minHeight:\"35px\", \"width\":\"90%\", \"marginLeft\":\"9%\", borderRadius:\"4px\", marginRight:\"15px\", marginBottom:\"7px\"}}>\r\n               <div className=\"ff\"><b>{comment.username+\" said: \"}</b>{comment.content}</div>\r\n               \r\n                \r\n                {nestedComments}\r\n                \r\n              </div>\r\n              <div>\r\n              \r\n              </div>\r\n              </div>\r\n            )\r\n          }\r\n\r\n        return (\r\n            <div>\r\n    <Base title='Posting App ' description=\"Welcome to Posting app\"  >\r\n    <div className=\"d-flex justify-content-center\">\r\n    <button className=\"btn btn-primary\" onClick={()=>this.onClickPost()} >Add post</button>\r\n    \r\n    </div>\r\n      <div className=\"d-flex justify-content-center text-dark\">\r\n      {this.state.check ?\r\n        <div> <textarea style={{width:\"500px\",height:\"150px\",marginTop:\"15px\"}} onChange={this.handleChange(\"post\")} type=\"text\" placeholder=\"Write something\"></textarea>\r\n      <button style={{marginLeft:\"215px\"}} onClick={()=>{this.onSubmitPost()}} className=\"d-flex justify-content-center ui teal button\">Submit</button>\r\n      </div>\r\n      : null\r\n      \r\n          \r\n      }\r\n      </div>\r\n      </Base>\r\n      <div className=\"upper-post-wrapper\">\r\n      <div className=\"post-wrapper\" style={{marginTop:\"-11px\"}}>\r\n      \r\n         \r\n         {\r\n           this.state.comment.map(e => {\r\n               const alComments= e.comments.map(e => e)\r\n             \r\n               return <div key={e._id} style={{border:\"0.2px solid black\",borderRadius:\"4px\", width:\"60%\", marginLeft:\"20%\",background:\"white\" ,marginTop:\"10px\"}} key={e._id}> \r\n               <p style={{margin:\"5px\"}}><b>{\"submitted by \"+e.user}</b></p>\r\n               <p style={{margin:\"15px\"}} className=\"author\">{e.text}</p>\r\n               \r\n               <Fragment>\r\n               {\r\n                  isAuthenticated() && e.user_id === isAuthenticated().user._id ?\r\n                   <button className=\"btn btn-danger \"  style={{marginLeft:\"10px\",borderRadius:\"4px\", marginBottom:\"10px\"}}\r\n                    key={e._id} onClick={()=>this.submitDelete(e._id)} >Delete</button>:\r\n                   null\r\n               }\r\n               </Fragment>\r\n               \r\n               <button className=\"btn btn-secondary \" key={e._id} style={{marginLeft:\"10px\",borderRadius:\"4px\", marginBottom:\"10px\"}}\r\n                onClick={()=>this.onclickComment(e._id)} >Add Comments</button>\r\n               \r\n                <div>\r\n                {\r\n                 this.state.AddComment !== \"\" && this.state.AddCommentId === e._id?\r\n                 <div >\r\n                 <textarea onChange={this.handleChange(\"addcomments\")} type=\"text\"\r\n                  style={{marginTop:\"10px\",marginLeft:\"10%\",width:\"35%\",height:\"20%\"}} \r\n                 placeholder=\"type comment\"></textarea>\r\n                 <div style={{marginTop:\"10px\",marginLeft:\"10%\",width:\"45%\",height:\"20%\"}}>\r\n                 <button className=\"ui teal button\" onClick={()=>{this.onSubmitComment()}} >Comment</button>\r\n                 </div>\r\n                 </div>\r\n                 :null\r\n                }\r\n                 </div>\r\n               \r\n               \r\n\r\n               \r\n                 <Fragment >{\r\n                   alComments.map((e) =>{\r\n                    \r\n                      return <div style={{height:\"100%\"}}><Comment  style={{height:\"100px\"}} key={e._id} comment={e}/>\r\n                      <button onClick={()=>{this.onClickReply(e._id,e.postId)}}\r\n                       className=\"btn-group-sm btn-primary\" \r\n                       style={{ marginLeft:\"78px\",borderRadius:\"4px\"}}>Reply</button>\r\n                       <div>\r\n                       {\r\n                        this.state.replyCommentId !== \"\" && this.state.replyCommentId === e._id?\r\n                        <div>\r\n                        \r\n                 <textarea onChange={this.handleChange(\"addReply\")} type=\"text\"\r\n                  style={{marginTop:\"10px\",marginLeft:\"10%\",width:\"35%\",height:\"20%\"}} \r\n                 placeholder=\"type comment\"></textarea>\r\n                 <div className=\"d-flex justify-content-center\" onClick={()=>this.onSubmitReply()} style={{marginRight:\"120px\",width:\"45%\",height:\"20%\"}}>\r\n                 <button style={{marginRight:\"120px\"}} className=\"ui teal button\" onClick={()=>{this.onSubmitComment()}} >Reply</button>\r\n                 </div>\r\n                 \r\n                        </div>:\r\n                   null\r\n                       }\r\n                       </div>\r\n                     \r\n                    \r\n                     </div>\r\n               \r\n                    })\r\n                 }\r\n            </Fragment>\r\n               </div>\r\n           })  \r\n         }\r\n        \r\n  \r\n\r\n  \r\n  \r\n      </div>\r\n      </div>\r\n     \r\n      \r\n      </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\anuma\\OneDrive\\Desktop\\Assignment\\frontend\\src\\user\\UserDashBoard.js",[],{"ruleId":"74","severity":1,"message":"75","line":6,"column":10,"nodeType":"76","messageId":"77","endLine":6,"endColumn":15},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"74","severity":1,"message":"82","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"83","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":21},{"ruleId":"74","severity":1,"message":"84","line":20,"column":59,"nodeType":"76","messageId":"77","endLine":20,"endColumn":66},{"ruleId":"74","severity":1,"message":"85","line":21,"column":11,"nodeType":"76","messageId":"77","endLine":21,"endColumn":15},{"ruleId":"74","severity":1,"message":"86","line":32,"column":5,"nodeType":"76","messageId":"77","endLine":32,"endColumn":17},{"ruleId":"74","severity":1,"message":"87","line":47,"column":10,"nodeType":"76","messageId":"77","endLine":47,"endColumn":21},{"ruleId":"74","severity":1,"message":"88","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":78,"column":7,"nodeType":"91","messageId":"92","endLine":78,"endColumn":35},{"ruleId":"74","severity":1,"message":"88","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"74","severity":1,"message":"93","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":17},{"ruleId":"74","severity":1,"message":"88","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":13},{"ruleId":"74","severity":1,"message":"94","line":7,"column":10,"nodeType":"76","messageId":"77","endLine":7,"endColumn":14},{"ruleId":"74","severity":1,"message":"95","line":8,"column":10,"nodeType":"76","messageId":"77","endLine":8,"endColumn":13},{"ruleId":"74","severity":1,"message":"96","line":10,"column":8,"nodeType":"76","messageId":"77","endLine":10,"endColumn":13},{"ruleId":"74","severity":1,"message":"97","line":247,"column":15,"nodeType":"76","messageId":"77","endLine":247,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":259,"column":71,"nodeType":"100","messageId":"101","endLine":259,"endColumn":83},{"ruleId":"102","severity":1,"message":"103","line":299,"column":164,"nodeType":"104","endLine":299,"endColumn":175},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'Link' is defined but never used.","'UserDashboard' is defined but never used.","'success' is assigned a value but never used.","'user' is assigned a value but never used.","'redirectRole' is assigned a value but never used.","'onItemClick' is assigned a value but never used.","'API' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'userEvent' is defined but never used.","'data' is defined but never used.","'api' is defined but never used.","'Axios' is defined but never used.","'c' is assigned a value but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]